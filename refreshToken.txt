app.get("/posts", authenticateToken, (req, res) => {
  res.json(posts.filter((post) => post.username === req.user.username));
});

let refreshTokens = [];
app.post("/token", (req, res) => {
  const refreshToken = req.body.token;

  if (refreshToken == null) return res.sendStatus(401);
  if (!refreshTokens.includes(refreshToken)) return res.sendStatus(403);

  jwt.verify(refreshToken, process.env.JWT_REFRESH_TOKEN, (err, user) => {
    if (err) return sendStatus(403);
    const token = generateToken({ username: user.username });
    res.json({ token: token });
  });
});

app.post("/login", (req, res) => {
  const username = req.body.username;
  const user = { username: username };

  const token = generateToken(user);
  const refreshToken = jwt.sign(user, process.env.JWT_REFRESH_TOKEN);
  refreshTokens.push(refreshToken);
  res.json({ token: token, refreshToken: refreshToken });
});

function generateToken(user) {
  return jwt.sign(user, process.env.JWT_TOKEN, { expiresIn: "15s" });
}